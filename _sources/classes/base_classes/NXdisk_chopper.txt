.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source ../../../../base_classes/NXdisk_chopper.nxdl.xml

.. index::
    ! NXdisk_chopper (base class)
    ! disk chopper (base class)
    see: disk chopper (base class); NXdisk_chopper

.. _NXdisk_chopper:

==============
NXdisk_chopper
==============

**Status**:

  base class, extends :ref:`NXobject`, version 1.0

**Description**:

  TODO: need documentation

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXgeometry`

.. index:: NXgeometry (base class); used in base class

**Structure**:

  .. index:: type (data field)

  **type**: :ref:`NX_CHAR <NX_CHAR>`

    Type of the disk-chopper: only one from the enumerated list (match text exactly)

    Any of these values:

      * ``Chopper type single``

      * ``contra_rotating_pair``

      * ``synchro_pair``


  .. index:: rotation_speed (data field)

  **rotation_speed**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_FREQUENCY <NX_FREQUENCY>`}

    chopper rotation speed

  .. index:: slits (data field)

  **slits**: :ref:`NX_INT <NX_INT>`

    Number of slits

  .. index:: slit_angle (data field)

  **slit_angle**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    angular opening

  .. index:: pair_separation (data field)

  **pair_separation**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    disc spacing in direction of beam

  .. index:: radius (data field)

  **radius**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    radius to centre of slit

  .. index:: slit_height (data field)

  **slit_height**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    total slit height

  .. index:: phase (data field)

  **phase**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

    chopper phase angle

  .. index:: ratio (data field)

  **ratio**: :ref:`NX_INT <NX_INT>`

    pulse reduction factor of this chopper in relation to other
    choppers/fastest pulse in the instrument

  .. index:: distance (data field)

  **distance**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

    Effective distance to the origin

  .. index:: wavelength_range (data field)

  **wavelength_range[2]**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_WAVELENGTH <NX_WAVELENGTH>`}

    low and high values of wavelength range transmitted

  **(geometry)**: :ref:`NXgeometry`


**Source**:
  Automatically generated from https://github.com/nexusformat/definitions/blob/master/base_classes/NXdisk_chopper.nxdl.xml
