.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source ../../../../base_classes/NXenvironment.nxdl.xml

.. index::
    ! NXenvironment (base class)
    ! environment (base class)
    see: environment (base class); NXenvironment

.. _NXenvironment:

=============
NXenvironment
=============

**Status**:

  base class, extends :ref:`NXobject`, version 1.0

**Description**:

  This class describes an external condition applied to the sample

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXgeometry`, :ref:`NXnote`, :ref:`NXsensor`

.. index:: NXgeometry (base class); used in base class, NXnote (base class); used in base class, NXsensor (base class); used in base class

**Structure**:

  .. index:: name (data field)

  **name**: :ref:`NX_CHAR <NX_CHAR>`

    Apparatus identification code/model number; e.g. OC100 011

  .. index:: short_name (data field)

  **short_name**: :ref:`NX_CHAR <NX_CHAR>`

    Alternative short name, perhaps for dashboard display like a present Seblock name

  .. index:: type (data field)

  **type**: :ref:`NX_CHAR <NX_CHAR>`

    Type of apparatus. This could be the SE codes in scheduling database; e.g. OC/100

  .. index:: description (data field)

  **description**: :ref:`NX_CHAR <NX_CHAR>`

    Description of the apparatus; e.g. 100mm bore orange cryostat with Roots pump

  .. index:: program (data field)

  **program**: :ref:`NX_CHAR <NX_CHAR>`

    Program controlling the apparatus; e.g. LabView VI name

  **position**: :ref:`NXgeometry`

    The position and orientation of the apparatus

  **(note)**: :ref:`NXnote`

    Additional information, LabView logs, digital photographs, etc

  **(sensor)**: :ref:`NXsensor`


**Source**:
  Automatically generated from https://github.com/nexusformat/definitions/blob/master/base_classes/NXenvironment.nxdl.xml
