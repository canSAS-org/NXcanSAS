.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source ../../../../applications/NXsas.nxdl.xml

.. index::
    ! NXsas (application definition)
    ! sas (application definition)
    see: sas (application definition); NXsas

.. _NXsas:

=====
NXsas
=====

**Status**:

  application definition, extends :ref:`NXobject`, version 1.0b

**Description**:

  This is an application definition for raw data (not processed or reduced data) 
  from a 2-D small angle scattering instrument collected with a monochromatic 
  beam and an area detector. It is meant to be suitable both for neutron SANS 
  and X-ray SAXS data.

  It covers all raw data from all SAS techniques: SAS, WSAS, grazing incidence, GISAS

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXcollimator`, :ref:`NXdata`, :ref:`NXdetector`, :ref:`NXentry`, :ref:`NXgeometry`, :ref:`NXinstrument`, :ref:`NXmonitor`, :ref:`NXmonochromator`, :ref:`NXsample`, :ref:`NXshape`, :ref:`NXsource`

.. index:: NXentry (base class); used in application definition, NXinstrument (base class); used in application definition, NXsource (base class); used in application definition, NXmonochromator (base class); used in application definition, NXcollimator (base class); used in application definition, NXgeometry (base class); used in application definition, NXshape (base class); used in application definition, NXdetector (base class); used in application definition, NXsample (base class); used in application definition, NXmonitor (base class); used in application definition, NXdata (base class); used in application definition

**Structure**:

  **(entry)**: :ref:`NXentry`


    .. index:: entry (attribute)

    **@entry**: :ref:`NX_CHAR <NX_CHAR>`

      NeXus convention is to use ``entry1``, ``entry2``, ... 
      for analysis software to locate each entry

    .. index:: title (data field)

    **title**: :ref:`NX_CHAR <NX_CHAR>`


    .. index:: start_time (data field)

    **start_time**: :ref:`NX_DATE_TIME <NX_DATE_TIME>`


    .. index:: end_time (data field)

    **end_time**: :ref:`NX_DATE_TIME <NX_DATE_TIME>`


    .. index:: definition (data field)

    **definition**: :ref:`NX_CHAR <NX_CHAR>`

      Official NeXus NXDL schema to which this file conforms

      Obligatory value:  ``NXsas``

    **instrument**: :ref:`NXinstrument`


      .. index:: name (data field)

      **name**: :ref:`NX_CHAR <NX_CHAR>`

        Name of the instrument actually used to perform the experiment

      **source**: :ref:`NXsource`


        .. index:: type (data field)

        **type**: :ref:`NX_CHAR <NX_CHAR>`

          type of radiation source

        .. index:: name (data field)

        **name**: :ref:`NX_CHAR <NX_CHAR>`

          Name of the radiation source

        .. index:: probe (data field)

        **probe**: :ref:`NX_CHAR <NX_CHAR>`


          Any of these values: ``neutron`` | ``x-ray``

      **monochromator**: :ref:`NXmonochromator`


        .. index:: wavelength (data field)

        **wavelength**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_WAVELENGTH <NX_WAVELENGTH>`}

          The wavelength of the radiation

        .. index:: wavelength_spread (data field)

        **wavelength_spread**: :ref:`NX_FLOAT <NX_FLOAT>`

          delta_lambda/lambda (:math:`\Delta\lambda/\lambda`):
          Important for resolution calculations

      **collimator**: :ref:`NXcollimator`


        **geometry**: :ref:`NXgeometry`


          **shape**: :ref:`NXshape`


            .. index:: shape (data field)

            **shape**: :ref:`NX_CHAR <NX_CHAR>`


              Any of these values: ``nxcylinder`` | ``nxbox``

            .. index:: size (data field)

            **size**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

              The collimation length

      **detector**: :ref:`NXdetector`


        .. index:: data (data field)

        **data[nXPixel, nYPixel]**: :ref:`NX_NUMBER <NX_NUMBER>`

          This is area detector data, of number of x-pixel versus
          number of y-pixels. Since the beam center is to be
          determined as a step of data reduction, it is not necessary
          to document or assume the position of the beam center in
          acquired data.

        .. index:: distance (data field)

        **distance**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          The distance between detector and sample

        .. index:: x_pixel_size (data field)

        **x_pixel_size**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          Physical size of a pixel in x-direction

        .. index:: y_pixel_size (data field)

        **y_pixel_size**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          Size of a pixel in y direction

        .. index:: polar_angle (data field)

        **polar_angle**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}


        .. index:: azimuthal_angle (data field)

        **azimuthal_angle**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}


        .. index:: rotation_angle (data field)

        **rotation_angle**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}


        .. index:: aequatorial_angle (data field)

        **aequatorial_angle**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}


        .. index:: beam_center_x (data field)

        **beam_center_x**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          This is the x position where the direct beam would hit the detector. This is a
          length, not a pixel position, and can be outside of the actual detector.

        .. index:: beam_center_y (data field)

        **beam_center_y**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          This is the y position where the direct beam would hit the detector. This is a
          length, not a pixel position, and can be outside of the actual detector.

    **sample**: :ref:`NXsample`


      .. index:: name (data field)

      **name**: :ref:`NX_CHAR <NX_CHAR>`

        Descriptive name of sample

      .. index:: aequatorial_angle (data field)

      **aequatorial_angle**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}


    **control**: :ref:`NXmonitor`


      .. index:: mode (data field)

      **mode**: :ref:`NX_CHAR <NX_CHAR>`

        Count to a preset value based on either clock time 
        (timer) or received monitor counts (monitor).

        Any of these values: ``monitor`` | ``timer``

      .. index:: preset (data field)

      **preset**: :ref:`NX_FLOAT <NX_FLOAT>`

        preset value for time or monitor

      .. index:: integral (data field)

      **integral**: :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ANY <NX_ANY>`}

        Total integral monitor counts

    **data**: :ref:`NXdata`


      **data** --> /NXentry/NXinstrument/NXdetector/data


**Source**:
  Automatically generated from https://github.com/nexusformat/definitions/blob/master/applications/NXsas.nxdl.xml
