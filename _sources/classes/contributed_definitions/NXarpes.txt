.. auto-generated by script ../../../../utils/nxdl2rst.py from the NXDL source ../../../../contributed_definitions/NXarpes.nxdl.xml

.. index::
    ! NXarpes (contributed definition)
    ! arpes (contributed definition)
    see: arpes (contributed definition); NXarpes

.. _NXarpes:

=======
NXarpes
=======

**Status**:

  contributed definition, extends :ref:`NXobject`, version 1.0

**Description**:

  This is an application definition for angular resolved photo electron spectroscopy.
  It has been drawn up with hemispherical electron analysers in mind.

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXdata`, :ref:`NXdetector`, :ref:`NXentry`, :ref:`NXinstrument`, :ref:`NXmonochromator`, :ref:`NXsample`, :ref:`NXsource`

.. index:: NXentry (base class); used in contributed definition, NXinstrument (base class); used in contributed definition, NXsource (base class); used in contributed definition, NXmonochromator (base class); used in contributed definition, NXdetector (base class); used in contributed definition, NXsample (base class); used in contributed definition, NXdata (base class); used in contributed definition

**Structure**:

  **(entry)**: :ref:`NXentry`


    .. index:: entry (attribute)

    **@entry**: :ref:`NX_CHAR <NX_CHAR>`

      NeXus convention is to use "entry1", "entry2", ... 
      for analysis software to locate each entry.

    .. index:: title (data field)

    **title**: :ref:`NX_CHAR <NX_CHAR>`


    .. index:: start_time (data field)

    **start_time**: :ref:`NX_DATE_TIME <NX_DATE_TIME>`


    .. index:: definition (data field)

    **definition**: :ref:`NX_CHAR <NX_CHAR>`

      Official NeXus NXDL schema to which this file conforms.

      Obligatory value:  ``NXarpes``

    **(instrument)**: :ref:`NXinstrument`


      **(source)**: :ref:`NXsource`


        .. index:: type (data field)

        **type**: :ref:`NX_CHAR <NX_CHAR>`


        .. index:: name (data field)

        **name**: :ref:`NX_CHAR <NX_CHAR>`


        .. index:: probe (data field)

        **probe**: :ref:`NX_CHAR <NX_CHAR>`


          Obligatory value:  ``x-ray``

      **monochromator**: :ref:`NXmonochromator`


        .. index:: energy (data field)

        **energy**: :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ENERGY <NX_ENERGY>`}


      **analyser**: :ref:`NXdetector`


        .. index:: data (data field)

        **data**: :ref:`NX_NUMBER <NX_NUMBER>`


        .. index:: lens_mode (data field)

        **lens_mode**: :ref:`NX_CHAR <NX_CHAR>`

          setting for the electron analyser lens

        .. index:: acquisition_mode (data field)

        **acquisition_mode**: :ref:`NX_CHAR <NX_CHAR>`


          Any of these values: ``swept`` | ``fixed``

        .. index:: entrance_slit_shape (data field)

        **entrance_slit_shape**: :ref:`NX_CHAR <NX_CHAR>`


          Any of these values: ``curved`` | ``straight``

        .. index:: entrance_slit_setting (data field)

        **entrance_slit_setting**: :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANY <NX_ANY>`}

          dial setting of the entrance slit

        .. index:: entrance_slit_size (data field)

        **entrance_slit_size**: :ref:`NX_CHAR <NX_CHAR>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`}

          size of the entrance slit

        .. index:: pass_energy (data field)

        **pass_energy**: :ref:`NX_CHAR <NX_CHAR>` {units=\ :ref:`NX_ENERGY <NX_ENERGY>`}

          energy of the electrons on the mean path of the analyser

        .. index:: time_per_channel (data field)

        **time_per_channel**: :ref:`NX_CHAR <NX_CHAR>` {units=\ :ref:`NX_TIME <NX_TIME>`}

          todo: define more clearly

        .. index:: angles (data field)

        **angles**: :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ANGLE <NX_ANGLE>`}

          Angular axis of the analyser data
          which dimension the axis applies to is defined
          using the normal NXdata methods.

        .. index:: energies (data field)

        **energies**: :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_ENERGY <NX_ENERGY>`}

          Energy axis of the analyser data
          which dimension the axis applies to is defined
          using the normal NXdata methods.

        .. index:: sensor_size (data field)

        **sensor_size[]**: :ref:`NX_INT <NX_INT>`

          number of raw active elements in fast and slow pixel dimension direction

        .. index:: region_origin (data field)

        **region_origin[]**: :ref:`NX_INT <NX_INT>`

          origin of rectangular region selected for readout

        .. index:: region_size (data field)

        **region_size[]**: :ref:`NX_INT <NX_INT>`

          size of rectangular region selected for readout

    **(sample)**: :ref:`NXsample`


      .. index:: name (data field)

      **name**: :ref:`NX_CHAR <NX_CHAR>`

        Descriptive name of sample

      .. index:: temperature (data field)

      **temperature**: :ref:`NX_NUMBER <NX_NUMBER>` {units=\ :ref:`NX_TEMPERATURE <NX_TEMPERATURE>`}


    **(data)**: :ref:`NXdata`


**Source**:
  Automatically generated from https://github.com/nexusformat/definitions/blob/master/contributed_definitions/NXarpes.nxdl.xml
